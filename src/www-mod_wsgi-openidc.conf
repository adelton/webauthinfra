
# Use this config file for OpenID Connect authentication when the (example)
# application runs directly in the www container under mod_wsgi.
#
# Place this file to www service's /data directory (www-data/www.conf)
# or for already running setup, copy it into the container and restart
# the httpd service:
#
#   docker cp src/www-mod_wsgi-openidc.conf webauthinfra_www_1:/data/www.conf
#   docker exec -ti webauthinfra_www_1 systemctl restart httpd

WSGIScriptAlias / /var/www/django/project/project/wsgi.py
WSGIPythonPath /var/www/django/project:/var/www/django/lib/python3.7/site-packages

<Directory /var/www/django>
<Files wsgi.py>
Require all granted
</Files>
</Directory>

Alias /static/ /var/www/django/lib/python3.7/site-packages/django/contrib/admin/static/
<Directory /var/www/django/lib/python3.7/site-packages/django/contrib/admin/static/>
Require all granted
</Directory>

# OIDCRedirectURI "https://www.example.test/openidc/redirect_uri"
# OIDCCryptoPassphrase "crypto-passphrase"
# OIDCProviderMetadataURL "https://idp.example.test/idp/openidc/wellknown_openid_configuration"
# OIDCClientID "client-id"
# OIDCClientSecret "client-secret"
# OIDCSSLValidateServer On
# OIDCResponseType "code"

# The above config options have been populated in /data/ipsilon-openidc.global
Include /data/ipsilon-openidc.global

OIDCRemoteUserClaim sub
OIDCInfoHook iat access_token access_token_expires id_token userinfo refresh_token session

<LocationMatch ^/openidc|^/admin/login|^/login>
    AuthType openid-connect
    Require valid-user
</LocationMatch>

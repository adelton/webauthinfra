
# Use this config file for OpenID Connect authentication when the (example)
# application runs in separate app container.
#
# Place this file to www service's /data directory (www-data/www.conf)
# or for already running setup, copy it into the container and restart
# the httpd service:
#
#   docker cp src/www-proxy-openidc.conf webauthinfra_www_1:/data/www.conf
#   docker exec -ti webauthinfra_www_1 systemctl restart httpd

ProxyPass /openidc !
ProxyPass / http://app.example.test/
ProxyPassReverse / http://app.example.test/

# OIDCRedirectURI "https://www.example.test/openidc/redirect_uri"
# OIDCCryptoPassphrase "crypto-passphrase"
# OIDCProviderMetadataURL "https://idp.example.test/idp/openidc/wellknown_openid_configuration"
# OIDCClientID "client-id"
# OIDCClientSecret "client-secret"
# OIDCSSLValidateServer On
# OIDCResponseType "code"

# The above config options have been populated in /data/ipsilon-openidc.global
Include /data/ipsilon-openidc.global

OIDCRemoteUserClaim sub
OIDCInfoHook iat access_token access_token_expires id_token userinfo refresh_token session

<LocationMatch ^/openidc|^/admin/login|^/login>
    AuthType openid-connect
    Require valid-user

    RewriteEngine on
    RewriteCond %{REMOTE_USER} (.+)
    RewriteRule ^.+$ - [E=REMOTE_USER:%1]
    RequestHeader unset X-REMOTE-USER
    RequestHeader set X-REMOTE-USER %{REMOTE_USER}e env=REMOTE_USER
</LocationMatch>
